{{define "vmUsage" -}}
    'tio.go' is an interface into Tenable.IO API using Go.

    Find more information at:
    https://github.com/whereiskurt/tiogo/

    Usage:
    tio vm [SUBCOMMAND] [ACTION ...] [OPTIONS]

    Sub-commands:
    help, scanners, agents, agent-groups, scans, assets, export-assets, export-vulns, user, user-groups, target-groups

    VM Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    VM Actions and Examples:
    $ tio vm help scanners
    $ tio vm help agents
    $ tio vm help agent-groups
    $ tio vm help scans
    $ tio vm help export-vulns

{{end}}

{{/* This is a template comment. */}}

{{define "ExportVulnsHelp" -}}
    Bulk Exports of Vulnerabilities
    https://developer.tenable.com/reference#exports

    Usage:
    tio vm export-vulns [ACTION ...] [OPTIONS]

    Action:
    start, status, get, query

    Export Vulns Options:
    Selection modifiers:
    --uuid=[unique id]
    --jqex=[jq expression]
    --chunk=[chunk to get, defaults: ALL]
    --critical, --high, --medium, --info  [severity to match for vulnerability]
    --before=[YYYY-MM-DD], --after=[YYYY-MM-DD] [date boundaries]
    --days=[number of days to bound query to]

    Output Modes:
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio vm export-vulns start
    $ tio vm export-vulns start --after=2019-01-01
    $ tio vm export-vulns start --after=2019-01-01 --critical
    $ tio vm export-vulns start --after=2019-01-01 --before=2019-01-31
    $ tio vm export-vulns start --before=2019-01-31 --days=31 --critical --high
    $ tio vm export-vulns start --after=2019-01-01 --days=31

    $ tio vm export-vulns status
    $ tio vm export-vulns get
    $ tio vm export-vulns query --jqex="[.asset.operating_system[0]]"
{{end}}


{{define "ExportVulnsStart" -}}
    Successfully started vulnerability export uuid='{{.ExportUUID}}'

    To review the 'status' for 'FINISHED' and then 'get' the export:

    Examples:
    ## Check the status of the chunk file creation:
    $ tio vm export-vulns status --uuid={{.ExportUUID}}

    ## Retrieve all chunk files. NOTE: Fails unless status is 'FINISHED'
    $ tio vm export-vulns get --uuid={{.ExportUUID}}

{{- end}}

{{define "ExportVulnsStatus" -}}
    Successfully requested status for uuid='{{.ExportUUID}}'.

    Once the current status='{{.Status}}' is 'FINISHED' you can download the exported vulnerabilities:

    Examples:
    ## Retrieve all of the chunks. NOTE: Fails unless status is 'FINISHED'
    $ tio vm export-vulns get --uuid={{.ExportUUID}}

    ## Retrieve FINISHED chunks 1,2,3. NOTE: Fails unless status is 'FINISHED'
    $ tio vm export-vulns get --uuid={{.ExportUUID}} --chunk=1,2,3
{{- end}}

{{define "ExportVulnsGet" -}}
    Successfully retrieved chunks='{{.Chunks}} for uuid='{{.ExportUUID}}'.

    Options modifiers:
    --uuid=[unique id]
    --jqex=[jq expression]
    --chunk=[chunk to get]

    --critical, --high, --medium, --info [severity to match for vulnerability]
    --before,--after=[YYYY-MM-DD of date boundaries]
    --days=[number of days to bound query to]

    Examples:
    ## Query
    ##Output all of the contents of the chunks as JSON
    $ tio vm export-vulns query --uuid='{{.ExportUUID}}' --jqex=".[]"

    ##Output all of the contents of the chunks as JSON
    $ tio vm export-vulns query --uuid='{{.ExportUUID}}' --jqex=".[]" --chunk=1,2

    $ tio vm export-vulns query --uuid='{{.ExportUUID}}' --critical --high --medium --days=45
    $ tio vm export-vulns query --uuid='{{.ExportUUID}}' --critical --days=30

    ## These three examples all produce the same results -- 15 day time boxes
    $ tio vm export-vulns query --uuid='{{.ExportUUID}}' --critical --high --after 2019-01-01 --days=15
    $ tio vm export-vulns query --uuid='{{.ExportUUID}}' --critical --high --before 2019-01-15 --days=15
    $ tio vm export-vulns query --uuid='{{.ExportUUID}}' --critical --high --after 2019-01-01 --before 2019-01-15

{{- end}}


{{define "scannersUsage" -}}
    Scanners conduct network based scanning and report results back to Tenable.IO.
    (https://cloud.tenable.com/api/#/resources/scanners)

    Usage:
    tio vm scanners [ACTION ...] [OPTIONS]

    Action:
    list

    Scanners Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio scanners
    $ tio vm scanners
    $ tio vm scanners list
    $ tio vm scanners list --csv
    $ tio vm scanners list --json
    $ tio vm scanners list --regex '.*PROD[0-9][0-9]?.*'
{{end}}

{{define "agentsUsage" -}}
    Agents:

    Agents are software installed on hosts that execute local host scans and report back to Tenable.io
    https://developer.tenable.com/reference#agents

    Usage:
    tio vm agents [ACTION ...] [OPTIONS]

    Action:
    list, group, ungroup

    Agents Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio agents
    $ tio agents list --without-group
    $ tio agents list --group "New Group Name"

    ## Group and Ungroup Agents into Agent Groups
    $ tio agents group --group "New Group Name" --regex "10\.0\.2\"
    $ tio agents ungroup --group "New Group Name"
{{end}}
{{define "agentGroupsUsage" -}}
    Agent Groups:
    Agents are put into Groups and used for the purposes of Agent Scans.
    (https://cloud.tenable.com/api/#/resources/agent-groups)

    Usage:
    tio vm agent-groups [ACTION ...] [OPTIONS]

    Action:
    list, create, delete, sync

    Agents Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio vm agent-groups list
    $ tio agent-groups

    $ tio vm agent-groups create --name "Agent Group #Y"
    $ tio vm agent-groups delete --name "Agent Group #Y"

    ## Output IP addresses of Agents to so we can create Target Groups
    $ tio vm agent-groups list --as-target-groups --size=16
    $ tio vm agent-groups sync --as-target-groups --size=16

{{end}}

{{define "scansUsage" -}}
    Scans:
    Network Scans are executed against Target Groups and Agent Scans against Agent Groups
    (https://cloud.tenable.com/api/#/resources/scans)

    Usage:
    tio vm scans [ACTION ...] [OPTIONS]

    Action:
    list, reschedule

    Agents Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio vm scans list
    $ tio vm scans list --never-run

    $ tio vm scans reschedule --onetime --date "next second Wednesday" --time "1400"

{{end}}
{{define "assetsUsage" -}}
    Assets:
    (https://cloud.tenable.com/api/#/resources/assets)

    Usage:
    tio vm assets [ACTION ...] [OPTIONS]

    Action:
    list, tag, untag

    Assets Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio vm assets list

    $ tio vm assets tag --uuid="0123-123-3245-21395" --category "Owner" --tag "Finance"
    $ tio vm assets untag --uuid="0123-123-3245-21395" --category "Owner" --tag "Finance"


{{end}}

{{define "exportAssetsUsage" -}}
    Export Assets:
    Bulk Exports of Assets
    (https://cloud.tenable.com/api/#/resources/exports)

    Usage:
    tio vm export-assets [ACTION ...] [OPTIONS]

    Action:

    Export Assets Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio vm export-assets
    $ tio vm export-assets --convert-to-cache


{{end}}

{{define "usersUsage" -}}
    Users:
    Tenable.io portal user management.
    (https://cloud.tenable.com/api/#/resources/exports)

    Usage:
    tio vm users [ACTION ...] [OPTIONS]

    Action:
    list, create, delete
    Assets Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]
    --email=[string]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio vm user list
    $ tio vm user create --name "Real Name" --email "reaname@domain.tld"
    $ tio vm user delete --name "User Group #X"

{{end}}
{{define "userGroupsUsage" -}}
    User Groups:
    Tenable.io portal user management.
    (https://cloud.tenable.com/api/#/resources/exports)

    Usage:
    tio vm user-groups [ACTION ...] [OPTIONS]

    Action:
    list, create, delete
    Assets Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:

    $ tio vm user-groups list
    $ tio vm user-groups create --name "User Group #X"
    $ tio vm user-groups delete --name "User Group #X"
{{end}}

{{define "targetGroupsUsage" -}}
    Target Groups:
    Target Groups are used in reports and dash boards in Tenable.IO.
    (https://cloud.tenable.com/api/)

    Usage:
    tio vm target-groups [ACTION ...] [OPTIONS]

    Action:
    list, create, delete, append, remove, set

    Target Groups Options:
    Selection modifiers:
    --id=[unique id]
    --name=[string]
    --regex=[regular expression]
    --jqex=[jq expression]

    Output Modes:
    --csv   Set table outputs to comma separated files [ie. good for Excel + Splunk, etc.]
    --json  Set table outputs to JSON [ie. good for integrations and jq manipulations.]

    Examples:
    $ tio vm target-groups list
    $ tio vm target-groups create --name "DEV Network #X" --members="10.1.0.0/16, 10.2.0.0/16"
    $ tio vm target-groups set --name "DEV Network #X" --members="10.1.0.0/16, 10.2.0.0/16"
    $ tio vm target-groups append --name "DEV Network #X" --members="10.3.0.0/16, 10.4.0.0/16"
    $ tio vm target-groups remove --name "DEV Network #X" --members="10.3.0.0/16, 10.4.0.0/16"
    $ tio vm target-groups delete --name "DEV Network #X"

{{end}}